// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model HaikuGuess {
  id         Int      @id @default(autoincrement())
  haiku      Haiku    @relation("HaikuToGuesses", fields: [haikuId], references: [id], onDelete: Cascade)
  haikuId    Int
  movieId    Int      
  movieTitle String   @db.Text 
  count      Int      @default(1)
  isCorrect  Boolean  
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([haikuId, movieId])
  @@index([haikuId])
}

model HaikuStats {
  id              Int      @id @default(autoincrement())
  haiku           Haiku    @relation("HaikuToStats", fields: [haikuId], references: [id], onDelete: Cascade)
  haikuId         Int      @unique
  firstTryCount   Int      @default(0)
  secondTryCount  Int      @default(0)
  thirdTryCount   Int      @default(0)
  gameOverCount   Int      @default(0)
  tryCount        Int      @default(0)

  @@index([haikuId])
}

model Haiku {
  id         Int          @id @default(autoincrement())
  title      String       @db.Text
  date       DateTime     @db.Date
  body       String       @db.Text
  movie_id   Int
  prompt     String       @db.Text
  difficulty String       @db.Text
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  guesses    HaikuGuess[] @relation("HaikuToGuesses")
  stats      HaikuStats[] @relation("HaikuToStats")

  @@index([id])
}
